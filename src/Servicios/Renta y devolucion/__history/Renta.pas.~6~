unit Inspeccion;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, MemDS, DBAccess, Uni,
  Vcl.Grids, Vcl.DBGrids, CRGrid, Vcl.ExtCtrls, Vcl.StdCtrls, AdvEdit, DBAdvEd,
  Vcl.DBCtrls, AdvGlowButton, Vcl.ComCtrls, AdvDateTimePicker,
  AdvDBDateTimePicker, Vcl.Mask, AdvSmoothEdit, AdvSmoothEditButton,
  AdvSmoothDatePicker, DBAdvSmoothDatePicker, System.StrUtils, AdvDropDown,
  AdvCustomGridDropDown, AdvGridDropDown;

type
  TFrmRentaDevolucion = class(TForm)
    pnlLeft: TPanel;
    CRDBGrid1: TCRDBGrid;
    DsData: TDataSource;
    Label1: TLabel;
    qData: TUniQuery;
    DBAdvEdit2: TDBAdvEdit;
    DBAdvEdit6: TDBAdvEdit;
    DBAdvEdit1: TDBAdvEdit;
    btnCliente: TAdvGlowButton;
    btnVehiculo: TAdvGlowButton;
    btnEmpleado: TAdvGlowButton;
    AdvDBDateTimePicker1: TAdvDBDateTimePicker;
    DBRadioGroup8: TDBRadioGroup;
    DBRadioGroup5: TDBRadioGroup;
    DBRadioGroup7: TDBRadioGroup;
    AdvDBDateTimePicker2: TAdvDBDateTimePicker;
    DBAdvEdit3: TDBAdvEdit;
    DBAdvEdit4: TDBAdvEdit;
    Button1: TButton;
    Button2: TButton;
    DBMemo1: TDBMemo;
    Label2: TLabel;
    DBAdvEdit5: TDBAdvEdit;
    qDataID: TIntegerField;
    qDataID_EMPLEADO: TIntegerField;
    qDataID_VEHICULO: TIntegerField;
    qDataID_CLIENTE: TIntegerField;
    qDataFECHA_RENTA: TDateField;
    qDataFECHA_DEVOLUCION: TDateField;
    qDataMONTOXDIA: TSingleField;
    qDataDIAS: TIntegerField;
    qDataOBSERVACION: TStringField;
    qDataESTADO: TIntegerField;
    qDataCLIENTE: TStringField;
    qDataVEHICULO: TStringField;
    qDataEMPLEADO: TStringField;
    qDataRENTADO: TStringField;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormActivate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure qDataBeforePost(DataSet: TDataSet);
    procedure qDataAfterInsert(DataSet: TDataSet);
    procedure qDataCalcFields(DataSet: TDataSet);
    procedure btnClienteClick(Sender: TObject);
    procedure btnVehiculoClick(Sender: TObject);
    procedure btnEmpleadoClick(Sender: TObject);
    procedure DsDataStateChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmRentaDevolucion: TFrmRentaDevolucion;

implementation

uses
  DataModule, MainForm, Busqueda;

{$R *.dfm}

procedure TFrmRentaDevolucion.btnClienteClick(Sender: TObject);
begin
  try
    Application.CreateForm(TfrmBusqueda, frmBusqueda);

    frmBusqueda.Caption := 'Busqueda de Clientes';

    frmBusqueda.Tabla := 'CLIENTES';
    frmBusqueda.Campos := 'ID AS CODIGO, NOMBRES, APELLIDOS,CEDULA,TIPO_PERSONA';
    frmBusqueda.Condiciones := 'WHERE ESTADO = 1';
    frmBusqueda.Order := 'ORDER BY ID ASC';
    frmBusqueda.Campo_Busqueda := 'NOMBRES';

    if frmBusqueda.ShowModal = mrOk then
    begin
      qDataID_CLIENTE.AsInteger := frmBusqueda.qUnquery.Fields[0].AsInteger;
    end;
  finally
    FreeAndNil(frmBusqueda);
  end;
end;

procedure TFrmRentaDevolucion.btnEmpleadoClick(Sender: TObject);
begin
  try
    Application.CreateForm(TfrmBusqueda, frmBusqueda);

    frmBusqueda.Caption := 'Busqueda de Empleados';

    frmBusqueda.Tabla := 'EMPLEADOS';
    frmBusqueda.Campos := 'ID AS CODIGO, NOMBRES, APELLIDOS,CEDULA';
    frmBusqueda.Condiciones := 'WHERE ESTADO = 1';
    frmBusqueda.Order := 'ORDER BY ID ASC';
    frmBusqueda.Campo_Busqueda := 'NOMBRES';

    if frmBusqueda.ShowModal = mrOk then
    begin
      qDataID_EMPLEADO.AsInteger := frmBusqueda.qUnquery.Fields[0].AsInteger;
    end;
  finally
    FreeAndNil(frmBusqueda);
  end;
end;

procedure TFrmRentaDevolucion.btnVehiculoClick(Sender: TObject);
begin
  try
    Application.CreateForm(TfrmBusqueda, frmBusqueda);

    frmBusqueda.Caption := 'Busqueda de Vehículos';

    frmBusqueda.Tabla := 'VEHICULOS';
    frmBusqueda.Campos := 'ID AS CODIGO, DESCRIPCION, CHASIS,PLACA,MOTOR';
    frmBusqueda.Condiciones := 'WHERE ESTADO = 1';
    frmBusqueda.Order := 'ORDER BY ID ASC';
    frmBusqueda.Campo_Busqueda := 'DESCRIPCION';

    if frmBusqueda.ShowModal = mrOk then
    begin
      qDataID_VEHICULO.AsInteger := frmBusqueda.qUnquery.Fields[0].AsInteger;
    end;
  finally
    FreeAndNil(frmBusqueda);
  end;
end;

procedure TFrmRentaDevolucion.DsDataStateChange(Sender: TObject);
begin
  if qData.State in [dsInsert,dsEdit] then
  begin
    btnCliente.Enabled := True;
    btnVehiculo.Enabled := True;
    btnEmpleado.Enabled := True;
  end
  else
  begin
    btnCliente.Enabled := False;
    btnVehiculo.Enabled := False;
    btnEmpleado.Enabled := False;
  end;
end;

procedure TFrmRentaDevolucion.FormActivate(Sender: TObject);
begin
  frmMainForm.dsMain.DataSet := qData;
end;

procedure TFrmRentaDevolucion.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  frmMainForm.dsMain.DataSet := nil;
  Action := caFree;
end;

procedure TFrmRentaDevolucion.FormShow(Sender: TObject);
begin
  qData.Open;
end;

procedure TFrmRentaDevolucion.qDataAfterInsert(DataSet: TDataSet);
begin
  qDataESTADO.AsInteger := 1;
  qDataFECHA.AsDateTime := Now;
end;

procedure TFrmRentaDevolucion.qDataBeforePost(DataSet: TDataSet);
begin
  if ((qDataID_VEHICULO.IsNull) or
     (qDataID_EMPLEADO.IsNull) or
     (qDataID_CLIENTE.IsNull) or
     (qDataRALLADURAS.IsNull) or
     (qDataGOMA_REPUESTO.IsNull) or
     (qDataGATO.IsNull) or
     (qDataROTURA_CRISTAL.IsNull) or
     (qDataESTADO_NEUMATICO_1.IsNull) or
     (qDataESTADO_NEUMATICO_2.IsNull) or
     (qDataESTADO_NEUMATICO_3.IsNull) or
     (qDataESTADO_NEUMATICO_4.IsNull))
  then
  begin
    Application.MessageBox('Faltan campos por completar...' + #13#10#13#10
      + 'Se detendra el proceso', frmMainForm.error, MB_OK +
      MB_ICONSTOP);

    Abort;
  end
  else
  begin
    qDataCANTIDAD_COMBUSTIBLE.AsString := DrpDownGas.Text;
  end;
end;

procedure TFrmRentaDevolucion.qDataCalcFields(DataSet: TDataSet);
begin
  if qDataESTADO.AsInteger = 1 then
    qDataSTATUS.AsString := 'ACTIVO'
  else qDataSTATUS.AsString := 'INACTIVO';

  if not qDataID_CLIENTE.IsNull then
  begin
    qDataCLIENTE.AsString := frmMainForm.get_string_field('CLIENTES','ID','NOMBRES',
                           qDataID_CLIENTE.AsInteger);
  end;

  if not qDataID_EMPLEADO.IsNull then
  begin
    qDataEMPLEADO.AsString := frmMainForm.get_string_field('EMPLEADOS','ID','NOMBRES',
                           qDataID_EMPLEADO.AsInteger);
  end;

  if not qDataID_VEHICULO.IsNull then
  begin
    qDataVEHICULO.AsString := frmMainForm.get_string_field('VEHICULOS','ID','DESCRIPCION',
                           qDataID_VEHICULO.AsInteger);
  end;
end;

end.
